<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Plat extends \AppBundle\Entity\Plat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'titre', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'accroche', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'temps', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'difficulte', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'consistance', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'photo', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'plus', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'menus');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'titre', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'accroche', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'temps', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'difficulte', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'consistance', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'photo', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'plus', '' . "\0" . 'AppBundle\\Entity\\Plat' . "\0" . 'menus');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Plat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', array($titre));

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', array());

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccroche($accroche)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccroche', array($accroche));

        return parent::setAccroche($accroche);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccroche()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccroche', array());

        return parent::getAccroche();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemps($temps)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemps', array($temps));

        return parent::setTemps($temps);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemps', array());

        return parent::getTemps();
    }

    /**
     * {@inheritDoc}
     */
    public function setDifficulte($difficulte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDifficulte', array($difficulte));

        return parent::setDifficulte($difficulte);
    }

    /**
     * {@inheritDoc}
     */
    public function getDifficulte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDifficulte', array());

        return parent::getDifficulte();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsistance($consistance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsistance', array($consistance));

        return parent::setConsistance($consistance);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsistance', array());

        return parent::getConsistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', array($photo));

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', array());

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlus($plus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlus', array($plus));

        return parent::setPlus($plus);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlus', array());

        return parent::getPlus();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenu(\AppBundle\Entity\Menu $menus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenu', array($menus));

        return parent::addMenu($menus);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenu(\AppBundle\Entity\Menu $menus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenu', array($menus));

        return parent::removeMenu($menus);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenus', array());

        return parent::getMenus();
    }

}
